{"home":{"content":"# Lecture 2: Intro to CSS\n---\n\nWelcome to Lecture 2! Here's a brief class breakdown.\n\n#### Post Class\n---\n\nGreat class folks. Here are the **[class notes](https://github.com/FEWDMaterials/FEWD629_Lecture2-notes)** from tonight. \n\n**Homework**: Please **[click here](https://fewdmaterials.github.io/FEWD629_Lecture2_hwk/)**.\n\n#### Learning Objectives\n---\n\n1. Thorough introduction to CSS, the querying language of HTML\n2. Brief introduction to [**BEM**: Block, Element, Modifier](https://en.bem.info/methodology/key-concepts/) technique of CSS writing.\n\n#### Rundown\n---\n\n#### [Warmup](#warmup)\n#### [Wendy Bite Lab](#wendy-bite-lab)\n#### [Practical CSS3 Usecases](#practice-css3-usecases)\n#### [Styling for Various Screens](#styling-for-various-screens)\n#### [Frontend Frameworks](#frontend-frameworks)\n#### [Build a Landing Page](#build-a-landing-page)\n\n","idx":0},"title":{"content":"Intro to CSS\n","idx":1},"desc":{"content":"A thorough deep dive into CSS","idx":2},"warmup":{"content":"# Warmup\n---\n\nLet's begin by doing a few practice problems.\n\n\n### Exercises\n---\nHere are the main problems that we will solve.\n\n#### Problem 1\n---\n**[Consider this repo](https://github.com/FEWDMaterials/RelativePathsReview)**.\n\nYou are given several \"websites\". However they are set up in strange configurations! \n\n**For Each Folder**\n\n1. **WITHOUT** rearranging the files, link the proper css folders in the **`HEAD`** section\n2. If you do it right, hovering over the page in the browser will cause it to change colors\n\n#### Problems 2 - 5\n---\n#### Log in to [Samantha](http://samantha.fewd.us/#/) First!\n\nThen, given the following pages, please complete the task outlined.\n\n1. ##### [CSS Tag Selectors](http://samantha.fewd.us/#fork/mottaquikarim/CSS_Tag_Selectors) | [LIVE Instructor Version](http://samantha.fewd.us/#broadcast/mottaquikarim/CSS_Tag_Selectors)\n\n2. ##### [CSS Class Selectors](http://samantha.fewd.us/#fork/mottaquikarim/CSS_Class_Selectors_2) | [LIVE Instructor Version](http://samantha.fewd.us/#broadcast/mottaquikarim/CSS_Class_Selectors_2)\n\n3. ##### [CSS ID Selectors](http://samantha.fewd.us/#fork/mottaquikarim/CSS_ID_Selectors) | [LIVE Instructor Version](http://samantha.fewd.us/#broadcast/mottaquikarim/CSS_ID_Selectors)\n\n4. ##### [Complex CSS Selectors](http://samantha.fewd.us/#fork/mottaquikarim/Complex_CSS_Selectors) | [LIVE Instructor Version](http://samantha.fewd.us/#broadcast/mottaquikarim/Complex_CSS_Selectors)\n\n","idx":3},"wendy-bite-lab":{"content":"# Wendy Bite Lab\n---\n\nLet's complete the CSS portion of the task we began last week.\n\n#### Goals\n---\nOur main goal is to simply **style** the markup elements that we defined for this webisite.\n\n**However**, once we have successfully completed this task, we will go back to our code, analyze our styles, and apply **DRY** principles to **refactor** our codebase into something that is more reusable. \n\n(**PS**: **DRY** === **D**on't **R**epeat **Y**ourself).\n\n\n#### Resources\n---\n\nThe starter code that we wrote from last week is **[located here](https://github.com/mottaquikarim/FEWD629_Lecture2_WendyBite_starter)**.\n\nThere is some ugly CSS here as well, we will probably remove that.\n\n<p></p>\n\n<div>\n<img src=\"https://raw.githubusercontent.com/FEWDMaterials/WendyBite_BEM/master/assignmentMaterials/WendyBite_AboutMe.png\" style=\"width: 100%; height: auto;\">\n</div>\n<p></p>\n\n","idx":4},"practical-css3-usecases":{"content":"# Practical CSS3 Usecases\n---\n\nThese are examples of CSS3 uses that we will either cover **today** or **at some point** in the duration of the course.\n\n#### Exercise\n---\nSee if you can implement some of the more simple ones outlined here into one of your websites (either the resume or the Wendy Bite).\n\n#### CSS Use Cases\n---\n\nHere are some interesting use cases where CSS3 in particular becomes super handy.\n\n#### Animations\n---\n\nYou can do some really awesome work with animating your elements.\n\n* **[Spinner](http://fewd.us/howdoi/#/problem/42730)**\n\n* **[Repeating, multiple animations](http://fewd.us/howdoi/#/problem/4270)**\n\n#### Transitions\n---\n\nTransitions are animations that are triggered usually by some form of user interaction.\n\n* **[Hover Effects](http://fewd.us/howdoi/#/problem/4268)**\n\n#### Pseudo Selectors\n---\n\nPsuedo classes allow us to style specific types of element features, **i.e.** the **:hover** pseudo selector can be used to style an element as the user puts his mouse over it.\n\n* **[Menu Hover Effect](http://fewd.us/howdoi/#/problem/4957)**\n\nOther examples of pseudo selectors: **:visited**, **:after**, etc\n\n#### Overflows\n---\n\nKeep track of content and determine how it should behave if there is more content than space in the container.\n\n* **[Overflow Example](http://fewd.us/howdoi/#/problem/4165)**\n\n#### Grids\n---\n\nThis one is super expansive and you could literally teach an entire course on this. For now, take a look at a few examples / problems to gain perspective on this.\n\n* **[Vertically and Horizontally Center](http://fewd.us/jargon/#/problem/10099)**\n\n* **[Three Column Grid](http://fewd.us/howdoi/#/problem/4258)**\n\n* **[Flex Align/Justify](http://fewd.us/jargon/#/problem/10100)**\n\n* **[Flex Direction](http://fewd.us/jargon/#/problem/10097)**\n\n* **[Flex Wrap](http://fewd.us/jargon/#/problem/10098)**\n\n#### References\n---\n1. **[Exhaustive Guide to Flex](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)**\n2. **[CSS Animations Reference](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations/Using_CSS_animations)**\n3. \n**[Exhaustive list of CSS properties and values](http://www.w3schools.com/cssref/)**\n4. **[Exhaustive list of CSS3 properties](http://www.tutorialrepublic.com/css-reference/css3-properties.php)**\n","idx":5},"styling-for-various-screens":{"content":"# Styling for various Screens\n---\n\n**Learning Objective**: Understand how to apply CSS towards building web layouts that work in multiple screens.\n\n#### Exercise\n---\n\nRefactor your resume website so that it looks good and accessible on mobile screens. This usually means setting a smaller width on your content and perhaps updating font sizes. If you have an column grids you will probably want to stack them.\n\n---\n\nWe can write CSS that will allow us to format our data layouts so that it adheres properly to multiple screen sizes.\n\n#### Basics\n---\n* We want to have the SAME markup for ALL of our webviews\n* A website is responsive if the site layout changes based on the width of the browser pages but can compensate for any width.\n* A website is adaptive if the site layout changes based on the width of the browser but only for predetermined widths.\n* [Examples](http://socialdriver.com/2013/06/10/50-best-responsive-website-design-examples-of-2013/) of responsive sites\n* Always place this in your HTML\n\n```html\n<html>\n    <head>\n        ...\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0;\">\n        ...\n    </head>\n    ...\n</html>\n```\n\n#### Mobile First VS. Desktop First\n---\nThese two schemas are techniques for how we structure our css.\n\n**Most important takeaway**: almost always go with mobile first.\n\n \n* Remember, CSS is cascading which means that we can write one set of styles and then reapply other styles on top of that.\n\n#### Mobile First\n\nWith mobile first, we create the mobile layout first, then add a media query for tablet (with tablet styles) and then add a media query for desktop (with desktop styles)\n\n#### Desktop First\n\nWith desktop first, we create the desktop layout first (so styles for desktop), then add a media query for tablet, then mobile.\n\n#### Mobile First > Desktop First\n**Here's why**:\nforces you to think about the stuff that's really necessary for simplest version of your page and implement those\n\n\n* With mobile first, you simply add styles as needed as width increases (vs removing styles the other way around, which leads to writing more code)\n\n#### Examples\n---\nHere are some examples of different media queries.\n\n* #### [Basic Example; Mobile first](http://fewd.us/howdoi/#/problem/4080)\n\n* #### [Basic; Desktop first](http://fewd.us/howdoi/#/problem/4081)\n\n* #### [AND-ing](http://fewd.us/howdoi/#/problem/4082)\n\n* #### [OR-ing](http://fewd.us/howdoi/#/problem/4083)\n\n* #### [Buckets](http://fewd.us/howdoi/#/problem/4084)\n\n* #### [Overriding](http://fewd.us/howdoi/#/problem/4085)\n\n#### Common Breakpoints\n---\n**NOTE**: you should **NEVER** design for device specificity. Read [this](https://responsivedesign.is/articles/why-you-dont-need-device-specific-breakpoints).\n\n```css\n/* Smartphones (portrait and landscape) ----------- */\n@media only screen and (min-device-width : 320px) and (max-device-width : 480px) {\n/* Styles */\n}\n\n/* Smartphones (landscape) ----------- */\n@media only screen and (min-width : 321px) {\n/* Styles */\n}\n\n/* Smartphones (portrait) ----------- */\n@media only screen and (max-width : 320px) {\n/* Styles */\n}\n\n/* iPads (portrait and landscape) ----------- */\n@media only screen and (min-device-width : 768px) and (max-device-width : 1024px) {\n/* Styles */\n}\n\n/* iPads (landscape) ----------- */\n@media only screen and (min-device-width : 768px) and (max-device-width : 1024px) and (orientation : landscape) {\n/* Styles */\n}\n\n/* iPads (portrait) ----------- */\n@media only screen and (min-device-width : 768px) and (max-device-width : 1024px) and (orientation : portrait) {\n/* Styles */\n}\n/**********\niPad 3\n**********/\n@media only screen and (min-device-width : 768px) and (max-device-width : 1024px) and (orientation : landscape) and (-webkit-min-device-pixel-ratio : 2) {\n/* Styles */\n}\n\n@media only screen and (min-device-width : 768px) and (max-device-width : 1024px) and (orientation : portrait) and (-webkit-min-device-pixel-ratio : 2) {\n/* Styles */\n}\n/* Desktops and laptops ----------- */\n@media only screen  and (min-width : 1224px) {\n/* Styles */\n}\n\n/* Large screens ----------- */\n@media only screen  and (min-width : 1824px) {\n/* Styles */\n}\n\n/* iPhone 4 ----------- */\n@media only screen and (min-device-width : 320px) and (max-device-width : 480px) and (orientation : landscape) and (-webkit-min-device-pixel-ratio : 2) {\n/* Styles */\n}\n\n@media only screen and (min-device-width : 320px) and (max-device-width : 480px) and (orientation : portrait) and (-webkit-min-device-pixel-ratio : 2) {\n/* Styles */\n}\n\n/* iPhone 5 ----------- */\n@media only screen and (min-device-width: 320px) and (max-device-height: 568px) and (orientation : landscape) and (-webkit-device-pixel-ratio: 2){\n/* Styles */\n}\n\n@media only screen and (min-device-width: 320px) and (max-device-height: 568px) and (orientation : portrait) and (-webkit-device-pixel-ratio: 2){\n/* Styles */\n}\n\n/* iPhone 6 ----------- */\n@media only screen and (min-device-width: 375px) and (max-device-height: 667px) and (orientation : landscape) and (-webkit-device-pixel-ratio: 2){\n/* Styles */\n}\n\n@media only screen and (min-device-width: 375px) and (max-device-height: 667px) and (orientation : portrait) and (-webkit-device-pixel-ratio: 2){\n/* Styles */\n}\n\n/* iPhone 6+ ----------- */\n@media only screen and (min-device-width: 414px) and (max-device-height: 736px) and (orientation : landscape) and (-webkit-device-pixel-ratio: 2){\n/* Styles */\n}\n\n@media only screen and (min-device-width: 414px) and (max-device-height: 736px) and (orientation : portrait) and (-webkit-device-pixel-ratio: 2){\n/* Styles */\n}\n\n/* Samsung Galaxy S3 ----------- */\n@media only screen and (min-device-width: 320px) and (max-device-height: 640px) and (orientation : landscape) and (-webkit-device-pixel-ratio: 2){\n/* Styles */\n}\n\n@media only screen and (min-device-width: 320px) and (max-device-height: 640px) and (orientation : portrait) and (-webkit-device-pixel-ratio: 2){\n/* Styles */\n}\n\n/* Samsung Galaxy S4 ----------- */\n@media only screen and (min-device-width: 320px) and (max-device-height: 640px) and (orientation : landscape) and (-webkit-device-pixel-ratio: 3){\n/* Styles */\n}\n\n@media only screen and (min-device-width: 320px) and (max-device-height: 640px) and (orientation : portrait) and (-webkit-device-pixel-ratio: 3){\n/* Styles */\n}\n\n/* Samsung Galaxy S5 ----------- */\n@media only screen and (min-device-width: 360px) and (max-device-height: 640px) and (orientation : landscape) and (-webkit-device-pixel-ratio: 3){\n/* Styles */\n}\n\n@media only screen and (min-device-width: 360px) and (max-device-height: 640px) and (orientation : portrait) and (-webkit-device-pixel-ratio: 3){\n/* Styles */\n}\n```\n","idx":6},"frontend-frameworks":{"content":"# Frontend Frameworks\n---\n\n**Learning Objective**: What are front-end frameworks and how do they allow us to create modern, professional looking websites?\n\n#### Exercise\n---\n\nHow would you overwrite some of the styles of these frameworks? Say for example you'd like to add a button with **background-color** pink. How would you do this?\n\nCreate a sample file that pulls in a frontend framework and then add some of your own CSS that will overwrite a button's default color (from framework styles) and make it **pink**.\n\n---\n\nFrameworks are basically CSS stylesheets that were developed by other people. They are built in such a way that you don't have to spend time and energy building out commonly reusable components like **buttons** and **input fields**, etc\n\n#### Semantic UI\n---\nSome quick facts:\n\n* They write the CSS and HTML blocks for you, all you do is copy and paste\n* With a basic understanding of HTML/CSS, you can easily start building professional looking websites\n\n**Visit their [website](http://semantic-ui.com/).**\n\n**Read the [docs](http://semantic-ui.com/introduction/getting-started.html).**\n\n#### Material Design\n---\nSome quick facts:\n\n* Built by Google.\n* Follows the Material Design spec that a lot of new Google apps now implement (like Google Calendar, Google Inbox, etc).\n\n**Visit their [website](https://getmdl.io/).**\n\n#### Bootstrap\n---\n\nSome quick facts:\n\n* Built by your boys over @twitter, it is a framework for quickly building out complex webpages\n* Probably **the** most popular front-end framework.\n\n**Visit their [website](http://getbootstrap.com/).**\n\n**Read the [docs](http://getbootstrap.com/getting-started/).**\n\n#### Primer\n---\n\nSome quick facts:\n\n* Build by your boys over @github\n* Much simpler than bootstrap\n* Lighter weight too!\n\n**Visit their [website](http://primercss.io/).**\n","idx":7},"build-a-landing-page":{"content":"# Build a Landing Page\n---\n\nOk, activity time. **Let's build a sample landing page using a front-end framework and our current knowledge of CSS.**\n\n#### Options\n---\n\nLet's just choose one of these and get going.\n\nWe must **also** choose **one** of the four frontend frameworks we saw to help us build ou the grids and other UI elements. Or, we can just build from scratch. \n\n**Also note that** we **will** be pushing this to the internet via GitHub + [GitBot](http://gitbot.co).\n\n#### [BaseCamp](https://basecamp.com/)\n\n<p></p>\n\n<img src=\"http://cdn2.hubspot.net/hub/53/hubfs/basecamp-landing-page-example.png?noresize&t=1468231454139&width=660&height=427\" style=\"width: 100%;\">\n\n\n\n#### [Wistia](https://wistia.com/account/signup)\n\n<p></p>\n\n<img src=\"http://cdn2.hubspot.net/hub/53/hubfs/wisita-landing-page-example.png?noresize&t=1468231454139&width=660\" style=\"width: 100%;\">\n\n","idx":8},"__list__":["home","title","desc","warmup","wendy-bite-lab","practical-css3-usecases","styling-for-various-screens","frontend-frameworks","build-a-landing-page"]}